"""
Le type pagination
"""
type PageInfo {
    "L'identifiant du premier objet de la page retourné"
    startCursor: String
    "L'identifiant du dernier objet de la page retourné"
    endCursor: String
    "Le nombre total d'objets que contient la pagination"
    totalCount: Int!
    "Il existe une page suivante"
    hasPreviousPage: Boolean!
    "Il existe une page précedente"
    hasNextPage: Boolean!
}

"""L'ensemble des objets de starwars"""
union starwarsObject = Person | Planet | Specie | Vehicle | Starship

"""Les paramètres pour ajouter une image"""
input InputAddImage{
    "L'identifiant externe de l'objet: celui de l'api SWAPI"
    idExternal: ID!
    "Le type de l'objet"
    type: Type!
    "L'image à ajouter"
    imageHeader: InputImage!
}

"""Le type d'un objet"""
enum Type {
    Person
    Planet
    Specie
    Starship
    Vehicle
}

"""L'image à ajouter"""
input InputImage {
    "Le fichier de l'image"
    file: Upload!
    "Le titre de l'image"
    title: String!
    "La description de l'image"
    description: String
}

"""L'image à supprimer"""
input InputRemoveImage {
    idExternal: ID!
    idImage: ID!
}

"""La réponse lors du mutation"""
type ResponseMutation{
    "La mutation est réussi ou elle présente une erreur"
    success: Boolean!
    "Le message d'erreur s'il y en a une"
    message: String
    "Les détails de l'erreur par arguments donnés en entrés de la mutation"
    details: [DetailError]
    "L'objet mis à jour par la mutation"
    object: starwarsObject
}

"""Un détail d'une erreur: exemple key: 'title', message: 'Le titre est obligatoire'"""
type DetailError{
    "L'identifiant de l'erreur"
    key: String
    "Le message de l'erreur"
    message: String
}

"""Des information supplémentaires de l'objet"""
type ObjectMore {
    "Les images correspondantes à l'objet"
    imagesHeader(first:Boolean): [Image]
}

"""Le type image"""
type Image{
    "L'identifiant de l'image"
    _id: ID!
    "Le chemin de l'image"
    filename: String
    "Le titre de l'image"
    title: String
    "La description de l'image"
    description: String
}

"""Le type de retour lorsqu'on utilise la connexion de l'utilisteur"""
type ResponseSign{
    "Connexion réussie"
    success: Boolean!
    "Le message de l'erreur"
    message: String
    "Le token de la session"
    token: String
    "Les détails de l'erreur par arguments donnés en entrés de la mutation"
    details: [DetailError]
    "L'utilisateur de la session"
    user: User
}

"""Un utilisteur"""
type User{
    "Le login de l'utilisteur"
    login: String!
}